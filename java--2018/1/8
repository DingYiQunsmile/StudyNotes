```java
class Demo
{
	public staict void main(String[] args){
		System.out.println("helllo java");
	}
}
  str.substring(i);		// 提取字符串的第i + 1 个元素开始到结束位置的字符串

  System.out.println(str1.concat(str2));	//使用concat方法将两个字符串str1,str2连到一起

    	byte b[] = {97,98,99,100,101,102,103,104};

        String str1 = new String(b,3,3);	//输出b数组从位置3往后3个长度的字符串

	equal					//判断两个字符串是否相等

	equalsIgnoreCase(String str)		//此方法忽略字符串大小写

	StringBuffer sb = new StringBuffer(str1);//声明字符串对象sb

	sb.append(str2);			//将str2连接到str1后

        System.out.println(sb.insert(1,'r'));	//在1位置插入字符'r';


包的作用域
* public  //可以被任何类使用

* private  //只能被本类使用

*interface  //接口的声明

class students implements school//创建一个类，让他实现徐学校这个接口 


  //测试时间和日期的类Date

import java.util.Date;

public class Math3
{
    public static void main(String[] args){
        System.out.println(new Date());
        System.out.println(new Date().toString());
    }
}



//静态导入

package com.cjg.StaticImport;

public class StaticClass {

    public static int MAX = 100;  //静态变量、

    public static void daying(int x){  //静态方法

        System.out.println(x * 7);

    }
}

package com.cjg.StaticImport;

import static com.cjg.StaticImport.StaticClass.*;

import static java.lang.Math.abs; //静态导入MATH类下的静态方法abs

public class StaticImport {

    public static void main(String[] args){

        System.out.println(MAX);		//调用StaticClass类下的静态变量MAX

        daying(5);				//调用StaticClass类下的静态方法daying

	System.out.println(abs(-4));		//调用MATH类下的静态方法abs
    }
}
		*/这样就不需要写成StaticClass.daying 和 StaticClass.MAX 了

		*/不能用一行语句静态的导入包中所有类和类变量

		像：import static java.lang.*;//错误


	//内部类的构造器

    public void setstudentcourse(String[] courses){

        class course{

            private String[] courses;

            private int coursenum;

            public course(String[] course){

                courses = course;

                coursenum = course.length;

                getinfo();

            }
            private void get() {

                for (int i = 0; i < coursenum; i++) {

                    System.out.print(" " + courses[i]);

                }

            }
            private void getinfo() {

                get();

            }

        }
        new course(courses);

    }

    public static void main(String[] args){

        Person st = new Person();

        String[] courses = {"语文","数学","英语","化学"}; 

        st.setstudentcourse(courses);
    }

}
	



```
